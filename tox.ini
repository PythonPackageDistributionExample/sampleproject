[tox]
minversion = 3.4.0
#requires = 
#    tox-env
envlist = 
    clean,
    isort,
    flake,
    check,
    py37,
    report
#{py37}-{cover}
#ignore_basepython_conflict = true

[isort]
skip = __init__.py
line_length = 79
indent = 4
multi_line_output = 3
include_trailing_comma = true
lines_after_imports = 2
sections=FUTURE,STDLIB,FIRSTPARTY,THIRDPARTY,LOCALFOLDER
#known_future_library=future,pies
#known_standard_library=std,std2
known_first_party = sampleproject
known_third_party = pytest

[flake8]
max_line_length = 79
hang-closing = true
ignore = 
    W293
    W503
per-file-ignores =
    # line too long
    setup.py:E501
docstring-convention = numpy

[coverage:paths]
source = src

[coverage:run]
branch = true
source =
    src
parallel = true

[coverage:report]
show_missing = true
precision = 2
omit = *migrations*

[testenv]
wheel = true
passenv = *
deps = 
    pytest
    pytest-travis-fold
    pytest-cov
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes

commands = pytest \
           --cov
           --cov-append
           --cov-report=term-missing
           --junitxml {toxworkdir}/junit.{envname}.xml \
           {posargs:.}


#nocov: {posargs:pytest -vv --ignore=src}
#    pytest --cov --cov-report=term-missing -vv

# https://tox.readthedocs.io/en/latest/example/devenv.html#creating-development-environments-using-configuration
#[testenv:dev]
#basepython = python3.7
#usedevelop = True
#commands =
#deps = -rdevtools/develop.yml

#[testenv:cover]
#setenv =                                                                        
#     PYTHONPATH={toxinidir}/tests                                                
#     PYTHONUNBUFFERED=yes 
     
[testenv:clean]
deps = coverage
skip_install = true
commands = coverage erase

[testenv:isort]
skip_install = true
basepython = python3.7
deps = isort
commands = isort --check-only --diff --recursive src tests


[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage report
    coverage html

[testenv:flake]
skip_install = true
basepython = python3.7
deps = 
    flake8
    flake8-docstrings
    flake8-bugbear
commands = flake8 src tests setup.py

[testenv:check]
deps = 
    docutils
skip_install = true
commands = 
    python setup.py check --strict --metadata --restructuredtext
    python setup.py clean --all build_ext --force --inplace


#[testenv:codecov]
#deps = codecov
#skip_install = true
#commands = codecov []

