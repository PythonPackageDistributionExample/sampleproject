[tox]
minversion = 3.4.0
# tox-env is not used because I experienced issue #1354
# https://github.com/tox-dev/tox/issues/1354
#requires = 
#    tox-env

# list of independent environments to run
envlist = 
    clean,
    check,
    spell,
    docs,
    safety,
    {py37}-{cover, nocov},
    report,
# cover and nocov envs are required because coverage cannot run with
# usedevelop, reference to GitHub issue missing

# allows basepython option in testenv
ignore_base_python_conflict = true

# configuration for the isort module
# https://github.com/timothycrosley/isort
[isort]
skip = __init__.py
line_length = 79
indent = 4
multi_line_output = 3
include_trailing_comma = true
lines_after_imports = 2
sections=FUTURE,STDLIB,FIRSTPARTY,THIRDPARTY,LOCALFOLDER
#known_future_library=future,pies
#known_standard_library=std,std2
known_first_party = sampleproject
known_third_party = pytest

# my favourite configuration for flake8 styling
# https://flake8.pycqa.org/en/latest/#
[flake8]
max_line_length = 79
hang-closing = true
ignore = 
    W293
    W503
per-file-ignores =
# line too long
    setup.py:E501
docstring-convention = numpy


# https://hypothesis.readthedocs.io/en/latest/index.html
[testenv]
wheel = true
# every env which name starts with py37 runs python3.7
# others run python3.7
# this stepup getsclarified when various python versions
# need to be supported
# see: https://github.com/ionelmc/python-nameless/blob/master/tox.ini
basepython =
    py37: {env:TOXPYTHON:python3.7}
    {clean,check,safety,spell,docs,report}: {env:TOXPYTHON:python3.7}
# still not completely clear the need for this
setenv = 
    PYTHONPATH = {toxinidir}/tests
    PYTHONUNBUFFERED = yes
passenv = 
    *
# sets usedevelop flag for cover and nocov envs
# use cover and nocov: https://github.com/pytest-dev/pytest-cov/issues/98
usedevelop = 
    cover: true
    nocov: false
deps = 
    pytest
    pytest-travis-fold
    cover: pytest-cov
    hypothesis
commands = 
    cover: python setup.py clean --all build_ext --force --inplace
    nocov: {posargs:pytest -vv --ignore=src}
    cover: {posargs:pytest --cov --cov-report=term-missing -vv}

[testenv:check]
deps = 
    docutils
    flake8
    flake8-docstrings
    flake8-bugbear
    isort
    bumpversion
skip_install = true
commands = 
    python setup.py check --strict --metadata --restructuredtext
    flake8 src tests setup.py
    isort --check-only --verbose --diff --recursive src tests setup.py
    bumpversion --dry-run --verbose --allow-dirty patch
    bumpversion --dry-run --verbose --allow-dirty minor
    bumpversion --dry-run --verbose --allow-dirty major


[testenv:safety]
basepython = python3.7
deps = safety
commands = safety check

[testenv:spell]                                                                 
setenv =                                                                        
    SPELLCHECK=1                                                                
commands =                                                                      
    sphinx-build -b spelling docs/rst docs/html                                     
usedevelop = true                                                            
deps =                                                                          
    -r{toxinidir}/docs/requirements.txt                                         
    sphinxcontrib-spelling                                                      
    pyenchant           

[testenv:docs]
usedevelop = true
install_command =
    python -m pip install --no-use-pep517 {opts} {packages}
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -b doctest docs/rst docs/html
    sphinx-build {posargs:-E} -b html docs/rst docs/html
    sphinx-build -b linkcheck docs/rst docs/html
# sphinx-build -M latexpdf docs/rst docs/latex
# sphinx-build -b linkcheck docs/rst docs/latex

[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage
